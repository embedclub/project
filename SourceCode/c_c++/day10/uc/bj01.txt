数据结构的回顾：
     什么叫数据结构 什么算法
     评价算法的三个维度：
          时间复杂度 ： O(1) O(logN) O(n) O(n平方)
					空间复杂度
					算法健壮性和可维护性
	逻辑结构
		 线性结构
		 		 栈  ：先进后出
		 		 队列 ：先进先出
		 		 链表
		 		 	   单向链表
		 		 	   双向链表
		 树型结构 ： 先/中/后序遍历 
		 网状结构
	物理结构
	    顺序存储
	    链式存储
-----------------------------------------------------------
1、如果数据结构没有学好还能继续后续课程吗？
   肯定可以
2、什么是UNIX下C开发，和前边学的C编程和数据结构有什么区别
   C语言学的是
       1）C的语法
       2）标准C的库函数：
         printf() malloc free strcpy fopen fclose fread..
   数据结构学的是：如何编程
         程序设计 = 数据结构 + 算法
   UC学习什么内容？
       内核释放出来供用户空间调用的API如何使用
       操作系统原理
3、UC课程的主要内容
   《linux程序设计》
    《unix环境高级编程》
  开发环境
  内存管理
  文件操作
  进程管理
  信号处理
  进程间通信
  		项目一
  网络编程
  线程管理    
      项目二   
4、如何学习UC
   man 手册
      1）命令如何使用
      2）函数 
      3）头文件
   man 的补丁包:man-patch.tar.gz
        tar xf man-patch.tar.gz
        rm manpages-zh_1.5.2-1_all.deb
        sudo dpkg -i *.deb  
5、开发环境
  5.1 unix/linux发展历程  
      商业版本： AIX （IBM）  银行
                 HPUX
                 Solais (SUN) 电信
	POSIX： 统一的编程接口规范
         学一套API函数，在所有的unix/linux下都可以使用
	GPL：是一种版权协议， 自由软件
	GNU：
	5.2 重新审视gcc工具
	   gcc helloworld.c --->a.out
	   1)预编译 ：针对所有伪指令（以#开头）
	   		gcc helloworld.c -E -o helloworld.i	
	   2）编译： 由C变成汇编
	   		gcc helloworld.i -S -o helloworld.s	
	   3）汇编： 由汇编语言变成目标代码
	      gcc -c helloworld.s -o helloworld.o	
	   4）链接:
	      gcc helloworld.o -o a.out
	   通常情况下将前三步统称为编译阶段
	   最后一步称为链接阶段
	 gcc 编译时重点参数：
	    -c : 只编译不链接
	    -o:  指定目标文件的名称
	    -g:  使生成的目标代码中包含调试信息
	    -Wall: warning all产生尽可能多的警告 
      -E：  只做预编译
      -S：  产生汇编文件
      -v:  显示编译器的版本
   5.3 重新审视.c 和.h文件
      1） 编译多个.c生成一个a.out
          gcc xxx.c yyy.c zzz.c
      2)  头文件的作用是什么？什么内容应该放入头文件？
          .h文件是本模块对外的清单,
               stack_base_list.c 
                    int g_buf[100];
               stack_base_list.h
          各种声明应该放在头文件中
						a)  声明外部变量和函数
				        extern int g_buf[]
				    b) 本模块定义的宏、类型别名 自定义数据类型
				        如果在其他模块中会使用，应该放入头文件中
				    c) 包含其他的头文件
				    注意： 重复包含机制
			 3） #include <xxx.h>:在系统目录下查找指定的文件
					 #include "xxx.h"：先在当前目录下查找指定文件，
					                   如果找不到再去系统目录下查找
					问题1：系统目录是哪？
					     /usr/include/ (主要)
							 /usr/local/include/
							 ... 
				  问题2： .h文件和.c文件没有在同一个目录下怎么办？
				    解决方法一：#include 时指定头文件所在路径
				                绝对路径
				                相对路径（推荐使用）
  				   解决方法二：
  	  4）预编译指令
  	     #error
  	     #if
  	     #elif
  	     #endif
  	     #warning
  	     #pragma GCC poison
  	     #pragma pack (重点)
  	        对齐：就是每个成员必须放在自己大小整数倍的位置
  	              大于4字节的成员按4 字节
  	        补齐：就是每个结构的大小应该是最大的成员大小的
  	              整数倍， 如果最大的成员大于4字节，按4字节
  	              计算
          #pragma pack(n) n如果大于最大成员的大小时最大成员
          								的大小对齐 
		5）预定义宏
			__FILE__
			__LINE__
			__FUNCTION__
			以上宏多用于调试程序时
	5.4重新审视a.out
	   问题1：为什么./a.out ?为什么ls
	       环境变量，一般是操作系统中用来指定操作系统运行环境的一些参数   
	     答：由于PATH环境变量
	     补充： env ,显示当前用户的环境变量
	   问题2：printf函数的实现代码在哪？
	   	  ldd a.out :显示a.out程序需要使用的共享库文件
	       答： printf的实现代码在库文件中， libc.so.6
	5.4.1 静态库
	5.4.2 共享库（动态库 xxx.dll）       
	        
作业：写两个函数，分别打印菱形和空心菱形
	
	
	
	
	
	
	
