'\n'        换行
'\r'        回车
'\t'        制表符
'\\'  '\''  '\"'   分别代表\,'和"

短整数是一种数据类型，其中包含65536个不同的整数
短整数用short表示
这个类型中的数字范围从-32768到32767
无符号短整数类型同样包含65536个整数，他们的
    范围从0到65535
无符号短整数类型用unsigned short表示

长整数数据类型用long或者long int表示
在我们的计算机上长整数类型中包含2的32次方个不同
    的整数
这个类型中的数字范围也是一半负数，一半非负数
无符号长整数类型用unsigned long 或unsigned long int
    表示
无符号类型中全都是非负数

整数类型用int表示，在我们的计算机上和长整数
    一样
无符号整数类型用unsigned int表示，在我们的计算机
    上和无符号长整数类型一样

以上数据类型都可以用来表示整数，用来记录整数，
    他们的主要区别是表示范围不同
它们的表示范围是互相重叠并且逐渐扩大的

C语言中把带小数点的数字叫浮点数
C语言中可以使用单精度浮点类型或者双精度
    浮点类型来表示浮点书
单精度浮点类型的名称是float,双精度浮点
    类型的名称是double
单精度浮点类型能记录的小数点后面的数位少，而
    双精度浮点类型能记录的小数点后面的数位多

程序中没有明确指定类型的整数数字自动被当成
    整数类型处理
在整数数字后面加u就表示这个数字的类型是无符号
    整数类型，例如8u
程序中没有明确指定类型的浮点数自动被当成
    双精度浮点类型处理
如果在浮点数后面加上f则表示这个数字的类型是
    单精度浮点类型

数据类型和占位符的对应关系
char                   %c或者%hhd
unsigned char          %d或者%hhu
   %c占位符对应字符表示方式，%hhd占位符对应
   数字表示方式
short                  %hd
unsigned short         %hu
long                   %ld
unsigned long          %lu
int                    %d
unsigned int           %u 
float                  %f或者%g
double                 %lf或者%lg
   %f和%lf会保留小数点后面无效的0，%g和%lg不会

%nd也可以作为占位符使用（n代表一个整数）。这种
    占位符打印出来的内容一定会占n个位置
%-nd也可以作为占位符使用（n代表一个整数）。这种
    占位符打印出来的内容也会占n个位置。有效内容
    打印在左边。
%0nd也可以作为占位符使用(n代表一个整数)。这种
    占位符打印出的内容也占n个位置。无效位置用
    字符'0'填充。
%n.mf可以用来作为占位符打印浮点数。打印结果一共
    占n个位置，其中小数点后面的部分占m个位置

存储区是计算机临时拼凑出来用来记录数字的
字节才是计算机内存的基本组成单位，计算机内存
    被划分成大量的字节
任意两个字节大小是一样的
内存中的所有字节排列成一条直线
不同字节之间有前后关系和相邻关系
任何一个存储区都是由一个或者多个相邻的字节
    拼凑得到的

不同数据类型的区别是由他们所包含的字节个数不同
    造成的

sizeof关键字可以用来计算一个存储区或一个数据
    类型所包含的字节个数

不同数据类型中包含的字节个数
char(unsigned char)         1个字节
short(unsigned short)       2个字节
long(unsigned long)         4个字节
int(unsigned int)           4个字节
float                       4个字节
double                      8个字节

sizeof关键字的小括号里可以放任何能当数字使用
    的内容
sizeof关键字的小括号里如果修改了任何存储区的
    内容，这种修改是不会真正发生的

计算机内存中每个字节有自己的地址
所有字节的地址是连续排列的，前面的字节地址小
    后面的字节地址大
所有字节的地址从0开始分配
存储区的地址是它所包含的所有字节中最前边那个
    字节的地址

一个字节里分成八段，这八段也拍成一条直线，
    有的在前有的在后。

计算机里采用二进制表示数字，二进制包含很多
    数位，每个数位上只能是0或者1
二进制仅仅是表示数字的一种方式,任何一个整数
    既可以用二进制方式表示也可以用其他方式
    表示
二进制表示方式中每个数位对应字节中的一段
可以把数字的二进制表示方式看成一副画，画的内容
    是一盒巧克力
可以使用这样一副画来表示总价格的数字

把一个字节中的八段分别编个号，最右边的编号为0
    然后向左依次递增
某一个段如果是1则它所代表的数字用十进制来表示
    就是2的编号次方
如果在一个二进制表示方式中有两个相邻的1则他们
    之间存在倍数关系。左边的1代表的数字是右边
    1代表数字的2倍。

进制转换指把数字的某种表示方式转换成另外一种
    表示方式

在二进制转换成十进制的时候需要把每个1单独转换，
    然后把转换结果相加就得到最终转换结果

0110 1010 = 2^6 + 2^5 + 2^3 + 2^1 
          = 64 + 32 + 8 + 2
          = 106

十进制转换成二进制的办法
1.把十进制数字拆分成多个2的整数次方之和，然后
    把每个拆分结果单独转换，最后把转换结果合并

87 = 64 + 16 + 4 + 2 + 1
   = 01000000 + 00010000 + 00000100 + 00000010 + 
     00000001
   = 01010111

2.对十进制数字不断进行除以2取余的操作，把所有余数
     收集起来按照从后向前的顺序编写就得到二进制
     表示方式

110           *******0
 55           0******1
 27           00*****1
 13           000****1
  6           0000***0
  3           00000**1
  1           000000*1
  0           00000000

转换结果是01101110

以上介绍的进制转换方法只能应用在非负数上
通过上述两种方法转换得到的二进制叫做原码
计算机里实际存储的是二进制的补码
非负数的原码和补码一样

八进制是二进制的简写方式
把一个二进制表示方式中所有的二进制数位从右向左
    每三个数位分成一组，把每一组用一个0到7之间
    的数字替换得到的结果就是八进制表示方式

01101110      01 101 110     156

可以直接在程序中使用八进制方式表示数字，但是一定
    要在左边写一个0，用来和十进制区分开
八进制对应的占位符是%o

十六进制也是二进制的简写方式
把一个二进制表示方式中的所有二进制数位从右向左
    每4个数位分成一组，每组用一个字符替换得到
    的结果就是十六进制表示方式。(如果每组的转换
    结果是10到15之间则用a到f之间的某个字符替换)

01101110    0110 1110     6e
可以在程序中使用十六进制方式表示数字，必须要
    在前边加上0x
十六进制对应的占位符是%x或%X（%x打印出来的字符
    都是小写的，%X打印出来的字符都是大写的）

二进制同样可以用来表示负整数，但不仅仅是加一个
    负号就可以的
负数二进制表示方式的计算过程如下
1.得到相反非负数的二进制表示方式
2.把第一步的计算结果每个数位的内容变成相反
    内容然后再加一

二进制加一的计算规则是把最右边数位开始的连续
    多个1变成0，把第一个0变成1

-5的二进制表示方式
5的二进制表示方式是00000101
每个数位内容变成相反内容后是11111010
加一以后的结果是11111011(这就是-5的二进制表示方式)

采用上述方法得到的就是负数的二进制补码，这个
    结果可以直接记录在字节中

所有有符号类型中都有一个特殊的二进制补码（最
    左边的数位是1，右边的所有数位都是0）这个
    补码用来表示这个数据类型中最小的整数

预习：
    1.二进制
    2.操作符

作业：
    1.编写程序从键盘得到一个0到127之间的数字，
        把它转换成二进制并把转换结果打印在屏幕上。
        （要求使用第一种方法实现）





