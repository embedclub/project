文件或文件夹的操作属性决定我们可以怎么使用这个
    文件或文件夹
操作属性由9个英文字母构成
文件或文件夹的使用方式有如下三种：察看，修改和
    执行
操作属性分成三组，每组包含三个字母
每组针对一些特定的使用者
最前边的三个字母构成的一组决定文件的所有者
    可以对文件做什么操作
中间三个字母构成的一组决定和所有者同组的
    人可以对文件做什么操作
最后三个字母构成的一组决定其他人可以对
    文件做什么操作

每组里的第一个字母决定是否可以察看文件内容，
    如果可以察看就用字母r表示，如果不能察看
    就用字母-表示
每组第二个字母决定是否可以修改文件内容。如果
    可以修改就用字母w表示，否则用-表示
每组第三个字母决定是否可以执行文件。如果可以
    执行就用字母x表示，否则用-表示。

每组中的三个字母可以合并成一个整数，合并过程
    中r转换成4，w转换成2，x转换成1，-转换
    成0。把三个字母各自的转换结果相加就得到
    整组的转换结果。

可以在终端窗口中使用命令修改文件的操作属性
chmod命令可以用来修改操作属性，使用方法如下
chmod 664(用三个数字表示的修改后的操作属性) 文件路径

文件是否可以执行不仅仅由操作属性决定，还和内容有关

脚本文件是一种可以执行的文件，它们里面包含大量
    可以执行的命令
脚本文件需要使用chmod命令修改操作属性，然后才能
    执行

cp命令可以用来实现文件拷贝,使用方法如下
cp 路径1 路径2
路径1代表一个已经存在的文件位置
路径2代表一个还不存在的文件位置
命令结束后路径2代表的文件出现，内容和路径1代表
    的文件一样

mv命令可以把一个文件从一个地方转移到另外一个地方，
    使用方法和cp命令一样

链接文件可以用来代表另外一个文件
ln命令可以用来创建链接文件
ln命令的使用方法和cp,mv一样
链接文件和原文件的内容在计算机里占同一块地方
使用这种方法创建出来的链接文件叫硬链接文件，
    即使原文件被删除硬链接文件仍然可以使用
命令中加入-s选项可以创建软链接文件
删除原文件后软链接文件就不能使用了

程序指的是文件系统中可以执行的文件，他们是
    不可以直接使用的
当执行程序的时候计算机会从文件中得到一组数据，
    然后根据这些数据在内存中创建出一组新数据。
    这组新数据叫做进程，用户真正使用的是进程
    中的数据。
程序中的数据不会随着时间改变，它们是静态的
进程中的数据会随着时间改变，它们是动态的
进程的概念不仅仅包含其中的数据同时还包含
    这些数据的变化规律
在不严格的场合下往往把他们俩都叫做程序

计算机为每个进程分配一个整数用来代表它，这个
    整数叫做这个进程的ID。不同进程的ID一定
    不同。

ps命令可以用来察看当前终端窗口里的进程
使用-aux选项可以察看系统中的所有进程

kill命令可以终止一个进程的执行
使用kill命令时需要提供进程ID

使用-9选项可以强制结束一个进程

对于占住终端窗口的进程可以使用ctrl+c组合键
    结束它

利用输出重定向可以把命令的执行结果保存在
    文件中
在命令中加>以及一个文件路径就可以实现输出重定向
这时命令的结果就会被保存在路径对应的文件中
使用单一大于号实现输出重定向的时候会把文件
    原有内容清除
使用两个大于号也可以实现输出重定向，这时会保留
    文件中原有内容

使用通配符编写的路径可以代表多个已经存在的
    文件或文件夹的位置
?是一个通配符，它可以代表一个任意的字符
*也是一个通配符，它可以代表任意多个任意字符

C语言中程序要求记录在以.c作为扩展名的文件里

C语言中允许直接使用加减乘除四则计算符号（
    这些符号分别是+,-,*,/）

C语言中要求使用;把不同操作步骤区分开
每个使用；做结尾的操作步骤叫做一条语句

C语言中采用分组方式管理所有的语句，同一组
    的所有语句应该被包含在一对大括号里
每组语句内部还可以再分小组
大括号里面可以包含其他大括号

不被其他大括号包含的大括号叫顶级大括号
顶级大括号可以用来表示一个函数（函数就是
    一组语句构成的）
C语言程序中必须为每个函数起一个名字，不同
    函数的名字不能一样。通过名字可以区分
    不同的函数。
任何C语言程序中必须包含一个叫做main的函数，
    这个函数叫做主函数
当程序开始执行的时候主函数中的第一条语句
    最先执行
当主函数中最后一条语句结束的时候整个程序
    结束

C语言中允许一个函数在完成所有工作之后把一个
    数字遗留下来
这个遗留数字叫做这个函数的返回值
主函数在结束的时候可以指定一个返回值。如果指定
    的返回值数值是0则表示程序正常结束，如果
    不是0就表示出了异常情况。

C语言中保留了几十个英文单词，这些单词叫做关键字。
每个关键字有专门的用途，不能随便乱用
return就是一个关键字。这个关键字有两个用途，
    主要用途是结束一个函数的执行（任何时候
    一定会起到主要作用），辅助作用是用来
    指定返回值数值（只有在关键字后写了数字
    才会起这个作用）

根据数字在某个方面的区别把所有数字分成几组，每组
    叫做一个数据类型。
程序中的所有数字都必须有类型，否则计算机无法处理
    它
程序中没有明确指定类型的整数数字被自动归类为
    整数类型
整数类型中几乎包含所有不带小数点的整数
整数类型用int表示

C语言中必须为函数的返回值数值指定类型

编译器用来把编写好的程序翻译成计算机认识的格式
gcc是Linux系统下的C语言编译器

C语言程序开发基本步骤
1.使用vi编写.c源文件
2.使用gcc对源文件进行编译
3.使用./a.out命令执行得到的新文件

MinGW是Windows操作系统下的编译器，其中包含
     gcc

使用预处理指令可以把另外一个文件的内容包含
    到当前源文件中
#include预处理指令可以包含另外一个文件的内容
在预处理指令中需要使用相对路径指定另外一个
    文件的位置
把相对路径包含在<>里表示起点是系统中预先规定
    好的一组目录
把相对路径包含在""里表示也会把源文件所在
    目录作为起点去查找文件

gcc的工作过程
1.处理所有预处理指令
2.把源文件翻译成计算机能认识的格式（编译）
3.把程序中不同部分连在一起(链接)

gcc命令可以使用的选项
-E             只完成预处理指令的处理
-c             只完成预处理和编译工作
               处理完成后会得到以.o作为
               扩展名的目标文件
-o             可以用来指定得到的新文件名称
-std=c89/-std=c99
               决定当次编译所遵守的版本
               如果没有使用这个选项gcc默认
               采用c89

可以在程序中加入文字信息
文字信息必须加入到注释区域内（编译器会忽略
    注释区域里的所有内容）
如果一行中有//，则它们后面的部分就是注释
    这种注释叫单行注释
多行注释以/*作为开头，*/作为结尾。这种注释
    可以跨越多行。

C语言中使用标识符来区分不同内容
编写标识符的时候最好采用有意义的英文单词
标识符的命名规则
1.第一个字母必须是英文字母或者下划线
2.后面的字母可以是英文字母，下划线或者数字
     字符
3.标识符大小写敏感
4.关键字不可以当标识符
5.标识符的长度没有限制（c89规范中截取前31个字符，
     c99规范中截取前63个字符）

C语言程序的代码规范
1.一行中最多包含一条语句
2.不同层次的语句要使用缩进区分开
3.在合适的地方使用空格和空行提高可读性
4.标识符采用驼峰方式或者下划线方式书写

预习：
    1.printf标准函数
    2.变量
    3.scanf标准函数

作业：
    1.假设现在有1g到127g这127个不同的重量
       要求设计一组砝码能够表示其中的任何
       一个重量（同样重量的砝码只能有一个，
       砝码的数量越少越好）






