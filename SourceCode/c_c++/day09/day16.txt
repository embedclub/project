使用二级指针形式参数可以让被调用函数把动态分配
    的地址记录在调用函数提供的指针存储区里

calloc标准函数也可以用来动态分配内存
这个函数会把动态分配存储区里的数字都清除成0，
    malloc不会这样
calloc需要两个参数，一个参数表示单个存储区的
    大小，另外一个参数表示存储区的个数

realloc函数可以调整一段动态分配内存的大小
这个函数需要花费比较长的时间
这个函数也可能失败，如果失败则返回NULL

函数指针用来记录一个函数的地址
函数名称可以用来表示函数的地址
函数指针一旦记录了某个函数的地址就可以当作
    那个函数来使用

函数指针也分类型，一个函数指针只能和类型相同
    的某一组函数进行捆绑

可以作为实际参数使用的函数叫回调函数（callback）

atoi函数可以把字符串中的整数转换成整数类型数字
atof函数可以把字符串中的浮点数转换成双精度
    浮点类型的数字
为了使用这两个函数需要包含stdlib.h文件

sqrt标准函数可以用来计算一个浮点数的平方根
为了使用这个函数需要包含math.h头文件
在编译命令中需要加入-lm选项

pow标准函数可以计算一个数字的多少次方
为了使用这个标准函数也需要包含math.h头文件
编译的时候也需要使用-lm选项

printf函数把数字写在输出缓冲区里
只有满足以下四个条件中的一个时输出缓冲区
    里的内容才会打印在屏幕上
1.如果输出缓冲区里有'\n'字符则它之前的部分
    会被打印在屏幕上
2.当程序结束的时候它放在输出缓冲区里的内容
    会被打印在屏幕上
3.当输出缓冲区被充满的时候它里面的内容自动
    被打印在屏幕上
4.使用stdout作为参数调用fflush函数可以把输出
    缓冲区里的内容打印在屏幕上

sleep函数可以让进程休眠指定的秒数
为了使用这个函数需要包含unistd.h头文件
参数是一个整数，表示希望休眠的秒数
休眠时间不精确，可能会有误差

sscanf函数可以按照格式从字符串里得到多个数字
    并把它们记录在变量中
sprintf函数可以把多个数字按照格式打印到字符串
     里
这两个函数的第一个参数就是它们要操作的字符串，
   后面的参数和scanf/printf一样

fscanf函数可以从文本文件中按格式获得多个数据
    并记录在变量中
fprintf函数可以把多个数据按照格式打印在文本
    文件里







