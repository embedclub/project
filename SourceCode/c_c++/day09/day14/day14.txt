条件编译还可以采用如下格式实现
#if....#elif(次数任意)...#else(可有可无)...#endif
这种格式可以根据任何布尔值从多组语句中选择一组
    进行编译
在这种结构中可以使用任意逻辑操作符编写逻辑表达式

可以把程序写在多个不同的.c源文件中
一个文件中可以包含任意多个函数，一个函数必须
    完整的属于一个文件

多文件编程步骤
1.把所有函数分散写在多个不同.c源文件中(通常把
    主函数单独写在一个源文件里)
2.为每个.c源文件编写对应的.h头文件（只包含主
    函数源文件不需要对应的头文件）。把.c源文件
    中所有函数的声明写在对应的.h头文件中
3.为每个.c源文件包含必要的.h头文件内容(必要的头
    文件分两种，一种是对应的.h头文件，另外一种
    是包含了所需函数声明的头文件)

编译多文件程序的时候需要把所有.c文件名称
    都列在gcc命令后面

为了避免一个源文件中多次包含一个头文件的内容，
    应该使用条件编译的方式编写头文件内容
第一条预处理指令应该是#ifndef
头文件中的宏名称应该采用文件路径

使用extern关键字声明变量时不会真正分配存储区，
    仅仅是把变量名称引入到程序中
如果一个源文件A想使用另外一个源文件B中的全局
    变量就必须在A文件中使用extern关键字把这个
    变量再次声明一次
使用extern关键字声明变量的语句可以写在头文件里

静态全局变量的作用域是声明它的文件中所有语句

结构体可以用来扩展新的数据类型(结构体类型中
    分成几个部分，不同部分的类型可以完全无关)
为了使用结构体类型必须首先声明它，声明结构体
    类型的时候需要使用struct关键字
结构体声明语句只是引入一种新的数据类型，它不会
    分配存储区

结构体一旦声明成功就可以作为数据类型使用，也就是
    说可以利用它声明变量。这种变量叫做结构体
    变量，结构体变量才真正被分配了存储区。

可以在结构体声明语句中直接声明结构体变量
也可以把struct关键字和结构体名称合并作为数据
    类型声明变量

C语言中结构体内部不可以包含函数

在结构体变量后加.然后再加上某一部分的名称就
    可以表示结构体变量中的某一部分

结构体指针可以用来和结构体变量捆绑
在结构体指针后边加->然后再加上某一部分的名称
    就可以表示捆绑结构体存储区中的某一部分了

typedef关键字可以用来给任何数据类型起别名
不可以使用宏给数据类型起别名
可以把结构体声明语句和起别名语句合并成一条
    语句。合并后甚至可以省略结构体名称（
    如果这样就只能使用别名作为数据类型使用了）

结构体变量可以采用数组初始化的方法进行初始化

大多数情况下结构体变量不可以作为整体使用，一次
    只能使用其中的一个部分
同类型的结构体变量之间可以直接赋值

结构体变量不适合作为函数的形式参数使用，因为它
    的使用过程中会进行结构体的整体复制，这会 
    造成时间和空间的浪费
使用结构体指针替代结构体作为函数的形式参数可以
    避免这个问题
结构体指针形式参数前要考虑是否能加const关键字

结构体类型不适合作为函数的返回值使用，因为会
    发生结构体的整体复制，这会浪费时间和空间。
应该使用结构体指针替换结构体作为函数的返回值
不要把局部结构体存储区的地址赋值给指针类型
    返回值存储区

预习：
    1.结构体的数据对齐和补齐
    2.枚举类型
    3.联合类型
    4.动态内存分配

作业：
    1.首先定义结构体表示屏幕上一个线段的位置，
           然后从键盘上得到两个线段的位置，最后
           编写函数从两条已知线段中找到比较长
          的那条，用返回值表示找到的结果。
          在主函数里把找到的比较长的线段位置
          打印在屏幕上



