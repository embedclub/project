绝大多数使用递归函数解决的问题也可以采用循环
    解决，但是难度会大很多
使用递归函数解决问题的思路叫递归
使用循环解决问题的思路叫递推

如果一个变量声明在一对大括号里面，则这对大括号
    的某一次运行过程就是这个变量的主人
如果这对大括号多次运行则每次运行过程是一个主人，
    它使用自己的变量。不同主人的变量是完全无关的。
如果变量没有声明在任何大括号里面则它的主人是整个
    程序的运行过程

变量的主人只能在某个时间范围内存在，它的变量
    也只能在这个时间范围内使用。这个时间范围
    叫做变量的生命周期。
一个变量只能被它的主人内部所包含的语句使用,
    这些语句叫做这个变量的作用域

如果生命周期和作用域不一致的时候由生命周期决定
    变量是否可以使用（如果生命周期决定变量
    可以使用也不能通过变量名来使用）

根据主人的不同把变量分成三类
1.主人是整个程序运行过程的变量叫全局变量，
    这种变量声明在所有大括号的外边。这种
    变量的生命周期是整个程序运行期间，它们
    的作用域是程序中的所有语句
  没有初始化的全局变量会自动被初始化成0
2.主人是某个函数运行过程的变量叫局部变量，
    他们声明在函数大括号里面。这种变量
    的生命周期是函数运行的时间范围，它们的
    作用域是函数内部的所有语句。
3.函数内部的大括号叫做语句块。主人是语句块
    运行过程的变量叫块变量。它们的生命
    周期是语句块运行的时间范围，它们的作用域
    是语句块内部的所有语句。

如果编写程序过程中多种类型的变量都能满足要求
    则应该优先选择作用域小的类型

一个程序中不同类型的变量是可以重名的
如果一条语句中使用的变量名称和多个不同类型的
    变量名称一样，则优先选择作用域最小的那个
    变量(在作用域允许的情况下)

程序相关数据在计算机内存中是分段保存的
代码段        记录语句转换后得到的数字
              运行时这个段落的内容不可以被
              修改
全局段        全局变量的存储区都位于全局段
              所包含的存储区个数不会随着程序
              的运行而改变
栈            局部变量，块变量，形式参数和
              返回值的存储区都位于这个段落
              这个段落中包含的存储区个数会
              随着程序的运行而改变
              每当一个函数开始运行的时候计算机
              在这个段落中分配存储区用来和这个
              函数中的各种变量匹配
              每当一个函数就要结束的时候计算机
              把分配给函数这次运行过程的存储区
              收回
              如果函数A在函数B之前开始运行则
              计算机必须首先把函数B的存储区收回
              然后才可以收回函数A的存储区
堆            动态分配的存储区都位于这个段落
              段落非常大，几乎可以认为是无限的
              这个段落中存储区的生命周期由程序员
              决定，一旦某些存储区不再使用就必须
              使用专门的语句把它们还给计算机 

声明变量时可以使用的关键字
1.auto关键字用来声明自动变量
       所有局部变量都是自动变量
       几乎不使用这个关键字
2.static关键字用来声明静态变量
     所有静态变量的生命周期都是整个程序
         运行期间
     没有初始化的静态变量也会自动被初始化成0
     静态变量的初始化只在程序开始的时候执行一次
     静态全局变量的作用域是声明它的文件中所有
     语句
     静态局部变量和全局变量的区别体现在作用域上
3.const关键字可以用来声明不可以赋值的变量
     这种变量只能在初始化的时候赋值
     可以通过赋值以外的其他方法修改变量的内容 
4.volatile关键字用来声明多变的变量
     
指针变量是用来记录地址数据的变量
指针变量可以用来帮我们找到另外一个存储区
指针变量的使用方式类似于一个种子文件
指针变量和种子文件的区别
1.任何时候一个指针变量只能帮我们直接找到另外
    一个存储区
2.指针变量在不同的时候可以帮我们找到不同
    的存储区
指针变量只有和一个存储区捆绑后才可以帮助我们
    找到那个存储区
把存储区的地址记录在指针变量中就实现了它们之间
    的捆绑
指针也分类型，不同类型的指针适合与不同类型的
    存储区捆绑

指针变量可以在程序中代表四个不同的内容
1.没有加*的指针既可以用来代表指针本身的
    存储区也可以用来代表这个存储区里的
    地址数据
2.加了*的指针既可以用来表示捆绑存储区也
    可以用来表示捆绑存储区里的数据

所有没捆绑的指针必须记录空地址（NULL），
    这个地址就是数字0
这种记录空地址的指针叫空指针

既没有捆绑存储区也没有记录空地址的指针叫
    野指针
一定要在程序中避免野指针的出现

所有没初始化的指针都是野指针，所以指针
    变量都应该初始化

****初始化的时候*没有参与初始化工作,初始化
    的时候修改的就是指针本身存储区的内容

如果在一条语句中声明多个指针变量则需要在每个
    指针变量名称前加*

预习：
    1.指针
    2.字符串

作业：
    1.编写函数生成一张彩票中的所有数字，在
        主函数中打印彩票中所有数字
        （不允许使用数组形参）







